
topic:
  name: users
  partitions-num: 6
  replication-factor: 3
server:
  port: 9999
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
    instance:
    preferIpAddress: true
spring:
  application:
    name: product-reports
  kafka:
    bootstrap-servers: localhost:29092
    topic:
      simpleMessageTopic: kafkaSimpleMessageTopic
      multiPartitionTopic: kafkaMultiPartitionTopic
      batchConsumerTopic: kafkaBatchConsumerTopic
      streamRawDataTopic: kafkaStreamRawDataTopic
      streamProcessedDataTopic: kafkaStreamProcessedDataTopic
    properties:
      bootstrap.servers: http://localhost:29092
      schema.registry.url: http://localhost:8085
    consumer:
      group-id: my-microservice
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro.reader: true
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:

  datasource:
    username: root
    url: jdbc:postgresql://localhost:5432/product_reports
    driverClassName: org.postgresql.Driver
    platform: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
logging:
  level:
    root: info